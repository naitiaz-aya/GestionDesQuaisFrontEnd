{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\OneDrive\\\\Bureau\\\\TangerMedReactjs\\\\src\\\\utils\\\\ProtectedRoutes.jsx\",\n    _s = $RefreshSig$();\n\nimport { useLocation, Navigate, Outlet } from \"react-router-dom\";\nimport useAuth from \"./useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoutes = _ref => {\n  _s();\n\n  var _auth$roles;\n\n  let {\n    allowedRoles\n  } = _ref;\n  const {\n    auth\n  } = useAuth();\n  const location = useLocation();\n  return auth !== null && auth !== void 0 && (_auth$roles = auth.roles) !== null && _auth$roles !== void 0 && _auth$roles.find(role => allowedRoles === null || allowedRoles === void 0 ? void 0 : allowedRoles.includes(role)) ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 15\n  }, this) : auth !== null && auth !== void 0 && auth.user ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/unauthorized\",\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 19\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    state: {\n      from: location\n    },\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 19\n  }, this);\n};\n\n_s(ProtectedRoutes, \"7PXqHcZB2FbEKkNQKRwOtlkhUwY=\", false, function () {\n  return [useAuth, useLocation];\n});\n\n_c = ProtectedRoutes;\nexport default ProtectedRoutes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoutes\");","map":{"version":3,"sources":["C:/Users/admin/OneDrive/Bureau/TangerMedReactjs/src/utils/ProtectedRoutes.jsx"],"names":["useLocation","Navigate","Outlet","useAuth","ProtectedRoutes","allowedRoles","auth","location","roles","find","role","includes","user","from"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,kBAA9C;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,eAAe,GAAG,QAAsB;AAAA;;AAAA;;AAAA,MAArB;AAAEC,IAAAA;AAAF,GAAqB;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAWH,OAAO,EAAxB;AACA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B;AAEA,SACIM,IAAI,SAAJ,IAAAA,IAAI,WAAJ,mBAAAA,IAAI,CAAEE,KAAN,oDAAaC,IAAb,CAAkBC,IAAI,IAAIL,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAEM,QAAd,CAAuBD,IAAvB,CAA1B,iBACM,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UADN,GAEMJ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,IAAAA,IAAI,CAAEM,IAAN,gBACI,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,eAAb;AAA6B,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAEN;AAAR,KAApC;AAAwD,IAAA,OAAO;AAA/D;AAAA;AAAA;AAAA;AAAA,UADJ,gBAEI,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEM,MAAAA,IAAI,EAAEN;AAAR,KAA7B;AAAiD,IAAA,OAAO;AAAxD;AAAA;AAAA;AAAA;AAAA,UALd;AAOH,CAXD;;GAAMH,e;UACeD,O,EACAH,W;;;KAFfI,e;AAaN,eAAeA,eAAf","sourcesContent":["import { useLocation, Navigate, Outlet } from \"react-router-dom\";\nimport useAuth from \"./useAuth\";\n\nconst ProtectedRoutes = ({ allowedRoles }) => {\n    const { auth } = useAuth();\n    const location = useLocation();\n\n    return (\n        auth?.roles?.find(role => allowedRoles?.includes(role))\n            ? <Outlet />\n            : auth?.user\n                ? <Navigate to=\"/unauthorized\" state={{ from: location }} replace />\n                : <Navigate to=\"/login\" state={{ from: location }} replace />\n    );\n}\n\nexport default ProtectedRoutes;"]},"metadata":{},"sourceType":"module"}